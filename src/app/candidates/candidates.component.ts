import { Component, OnInit } from '@angular/core';
import { CandidateService } from '../services/candidate.service';
import { CompanyService } from '../services/company.service'; // Service to fetch companies
import { Candidate, Company } from '../models';

@Component({
  selector: 'app-candidates',
  templateUrl: './candidates.component.html',
  styleUrls: ['./candidates.component.css']
})
export class CandidatesComponent implements OnInit {
  candidates: Candidate[] = [];
  companies: Company[] = []; // Store companies
  newCandidate: Omit<Candidate, 'id'> = {
    name: '',
    appliedPosition: '',
    email: '',
    phone: '',
    status: 'applied',
    companyId: 1 // Default company ID
  };
  editCandidateId: number | null = null;

  constructor(
    private candidateService: CandidateService,
    private companyService: CompanyService // Injecting company service
  ) {}

  ngOnInit(): void {
    this.loadCandidates();
    this.loadCompanies();
  }

  loadCandidates(): void {
    this.candidateService.getCandidates().subscribe(candidates => {
      this.candidates = candidates;
    });
  }

  loadCompanies(): void {
    this.companyService.getCompanies().subscribe(companies => {
      this.companies = companies; // Fetch companies
    });
  }

  addCandidate(): void {
    if (this.newCandidate.name && this.newCandidate.companyId) {
      const candidateToAdd: Candidate = {
        id: 0, // ID will be generated by the server
        ...this.newCandidate
      };

      this.candidateService.addCandidate(candidateToAdd).subscribe(() => {
        this.loadCandidates(); // Refresh the list
        this.resetForm();
      });
    }
  }

  editCandidate(candidate: Candidate): void {
    this.newCandidate = { ...candidate }; // Copy candidate details
    this.editCandidateId = candidate.id; // Set the ID for updating
  }

  deleteCandidate(id: number): void {
    this.candidateService.deleteCandidate(id).subscribe(() => {
      this.loadCandidates(); // Refresh the list after deletion
    });
  }

  resetForm(): void {
    this.newCandidate = {
      name: '',
      appliedPosition: '',
      email: '',
      phone: '',
      status: 'applied',
      companyId: 1 // Reset to default
    };
    this.editCandidateId = null; // Reset the edit ID
  }
}